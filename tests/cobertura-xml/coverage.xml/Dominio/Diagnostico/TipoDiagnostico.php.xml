<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="TipoDiagnostico.php" path="\Dominio\Diagnostico">
    <totals>
      <lines total="47" comments="2" code="45" executable="11" executed="11" percent="100.00"/>
      <methods count="5" tested="5" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Mod2Nur\Dominio\Diagnostico\TipoDiagnostico" start="9" executable="11" executed="11" crap="7">
      <namespace name="Mod2Nur\Dominio\Diagnostico"/>
      <method name="__construct" signature="__construct(string $id, string $descripcion)" start="13" end="20" crap="3" executable="4" executed="4" coverage="100"/>
      <method name="constructorUno" signature="constructorUno(string $descripcion)" start="22" end="27" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="constructorDos" signature="constructorDos(string $id, string $descripcion)" start="29" end="33" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getDescripcion" signature="getDescripcion(): string" start="36" end="39" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setDescripcion" signature="setDescripcion(string $descripcion): void" start="42" end="45" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="15">
        <covered by="Tests\Unit\AddTipoDiagnosticoHandlerTest::testHandleSuccessfullyCreatesDiagnostico"/>
        <covered by="TipoDiagControllerTest::testCrearNuevoTipoDeDiagnostico"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorLanzaExcepcionConUuidInvalido"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testSettersYGetters"/>
      </line>
      <line nr="16">
        <covered by="Tests\Unit\AddTipoDiagnosticoHandlerTest::testHandleSuccessfullyCreatesDiagnostico"/>
        <covered by="TipoDiagControllerTest::testCrearNuevoTipoDeDiagnostico"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testSettersYGetters"/>
      </line>
      <line nr="17">
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorLanzaExcepcionConUuidInvalido"/>
      </line>
      <line nr="18">
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorLanzaExcepcionConUuidInvalido"/>
      </line>
      <line nr="24">
        <covered by="Tests\Unit\AddTipoDiagnosticoHandlerTest::testHandleSuccessfullyCreatesDiagnostico"/>
        <covered by="TipoDiagControllerTest::testCrearNuevoTipoDeDiagnostico"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testSettersYGetters"/>
      </line>
      <line nr="25">
        <covered by="Tests\Unit\AddTipoDiagnosticoHandlerTest::testHandleSuccessfullyCreatesDiagnostico"/>
        <covered by="TipoDiagControllerTest::testCrearNuevoTipoDeDiagnostico"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testSettersYGetters"/>
      </line>
      <line nr="26">
        <covered by="Tests\Unit\AddTipoDiagnosticoHandlerTest::testHandleSuccessfullyCreatesDiagnostico"/>
        <covered by="TipoDiagControllerTest::testCrearNuevoTipoDeDiagnostico"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testSettersYGetters"/>
      </line>
      <line nr="31">
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorLanzaExcepcionConUuidInvalido"/>
      </line>
      <line nr="32">
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorAceptaUuid"/>
      </line>
      <line nr="38">
        <covered by="TipoDiagControllerTest::testCrearNuevoTipoDeDiagnostico"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\TipoDiagnosticoTest::testSettersYGetters"/>
      </line>
      <line nr="44">
        <covered by="Tests\Unit\TipoDiagnosticoTest::testSettersYGetters"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Mod2Nur\Dominio\Diagnostico</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Str</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Mod2Nur\Dominio\Abstracciones\Entity</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">TipoDiagnostico</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Entity</token>
      </line>
      <line no="10">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$descripcion</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$descripcion</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">constructorUno</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$descripcion</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">constructorDos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$descripcion</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">constructorUno</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$descripcion</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Str</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">uuid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">		</token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">descripcion</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$descripcion</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">constructorDos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$descripcion</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">		</token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">descripcion</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$descripcion</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">	</token>
        <token name="T_COMMENT">// Getters</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getDescripcion</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">descripcion</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">	</token>
        <token name="T_COMMENT">// Setters</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setDescripcion</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$descripcion</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">descripcion</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$descripcion</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="46">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47"/>
    </source>
  </file>
</phpunit>
