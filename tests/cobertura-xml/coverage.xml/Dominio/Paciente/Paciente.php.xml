<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Paciente.php" path="\Dominio\Paciente">
    <totals>
      <lines total="111" comments="2" code="109" executable="27" executed="27" percent="100.00"/>
      <methods count="15" tested="15" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Mod2Nur\Dominio\Paciente\Paciente" start="13" executable="27" executed="27" crap="19">
      <namespace name="Mod2Nur\Dominio\Paciente"/>
      <method name="__construct" signature="__construct(?string $id, ?string $nombre, ?DateTime $fechaNacimiento)" start="20" end="29" crap="5" executable="5" executed="5" coverage="100"/>
      <method name="constructorUno" signature="constructorUno(string $nombre, DateTime $fechaNacimiento)" start="31" end="37" crap="1" executable="4" executed="4" coverage="100"/>
      <method name="constructorDos" signature="constructorDos(string $id, string $nombre, DateTime $fechaNacimiento)" start="39" end="44" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="getNombre" signature="getNombre(): string" start="47" end="50" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getFechaNacimiento" signature="getFechaNacimiento(): DateTime" start="52" end="55" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getHistorial" signature="getHistorial(): array" start="57" end="60" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getEntrevistas" signature="getEntrevistas(): array" start="62" end="65" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setNombre" signature="setNombre(string $nombre): void" start="68" end="71" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setFechaNacimiento" signature="setFechaNacimiento(DateTime $fechaNacimiento): void" start="73" end="76" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setHistorial" signature="setHistorial(array $historial): void" start="78" end="81" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setEntrevistas" signature="setEntrevistas(array $entrevistas): void" start="83" end="86" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="addDiagnostico" signature="addDiagnostico(Mod2Nur\Dominio\Diagnostico\Diagnostico $diagnostico): void" start="88" end="91" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="removeDiagnostico" signature="removeDiagnostico(string $diagnosticoId): void" start="93" end="99" crap="1" executable="4" executed="4" coverage="100"/>
      <method name="addEntrevista" signature="addEntrevista(Mod2Nur\Dominio\Entrevista\Entrevista $entrevista): void" start="101" end="104" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getDiagnosticos" signature="getDiagnosticos(): array" start="106" end="109" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="22">
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaCrearYGuardarPaciente"/>
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaRetornarUnPaciente"/>
        <covered by="Tests\Unit\EntityTest::testSettersYGetters"/>
        <covered by="Tests\Unit\EntityTest::testFuncionEquals"/>
        <covered by="PacienteControllerTest::testCrearNuevoPaciente"/>
        <covered by="PacienteControllerTest::testCrearNuevoPacienteConUnitOfWork"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuidValido"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorLanzaExcepcionConUuidInvalido"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidCuandoIdEsVacio"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorLanzaExcepcionConParametrosNulos"/>
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
        <covered by="Tests\Unit\PacienteTest::testHistorialYEntrevistasInicialmenteVacias"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarEntrevista"/>
      </line>
      <line nr="23">
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaCrearYGuardarPaciente"/>
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaRetornarUnPaciente"/>
        <covered by="Tests\Unit\EntityTest::testSettersYGetters"/>
        <covered by="Tests\Unit\EntityTest::testFuncionEquals"/>
        <covered by="PacienteControllerTest::testCrearNuevoPaciente"/>
        <covered by="PacienteControllerTest::testCrearNuevoPacienteConUnitOfWork"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidCuandoIdEsVacio"/>
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
        <covered by="Tests\Unit\PacienteTest::testHistorialYEntrevistasInicialmenteVacias"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarEntrevista"/>
      </line>
      <line nr="24">
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuidValido"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorLanzaExcepcionConUuidInvalido"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorLanzaExcepcionConParametrosNulos"/>
      </line>
      <line nr="25">
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuidValido"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorLanzaExcepcionConUuidInvalido"/>
      </line>
      <line nr="27">
        <covered by="Tests\Unit\PacienteTest::testConstructorLanzaExcepcionConParametrosNulos"/>
      </line>
      <line nr="33">
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaCrearYGuardarPaciente"/>
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaRetornarUnPaciente"/>
        <covered by="Tests\Unit\EntityTest::testSettersYGetters"/>
        <covered by="Tests\Unit\EntityTest::testFuncionEquals"/>
        <covered by="PacienteControllerTest::testCrearNuevoPaciente"/>
        <covered by="PacienteControllerTest::testCrearNuevoPacienteConUnitOfWork"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidCuandoIdEsVacio"/>
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
        <covered by="Tests\Unit\PacienteTest::testHistorialYEntrevistasInicialmenteVacias"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarEntrevista"/>
      </line>
      <line nr="34">
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaCrearYGuardarPaciente"/>
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaRetornarUnPaciente"/>
        <covered by="Tests\Unit\EntityTest::testSettersYGetters"/>
        <covered by="Tests\Unit\EntityTest::testFuncionEquals"/>
        <covered by="PacienteControllerTest::testCrearNuevoPaciente"/>
        <covered by="PacienteControllerTest::testCrearNuevoPacienteConUnitOfWork"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidCuandoIdEsVacio"/>
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
        <covered by="Tests\Unit\PacienteTest::testHistorialYEntrevistasInicialmenteVacias"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarEntrevista"/>
      </line>
      <line nr="35">
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaCrearYGuardarPaciente"/>
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaRetornarUnPaciente"/>
        <covered by="Tests\Unit\EntityTest::testSettersYGetters"/>
        <covered by="Tests\Unit\EntityTest::testFuncionEquals"/>
        <covered by="PacienteControllerTest::testCrearNuevoPaciente"/>
        <covered by="PacienteControllerTest::testCrearNuevoPacienteConUnitOfWork"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidCuandoIdEsVacio"/>
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
        <covered by="Tests\Unit\PacienteTest::testHistorialYEntrevistasInicialmenteVacias"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarEntrevista"/>
      </line>
      <line nr="36">
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaCrearYGuardarPaciente"/>
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaRetornarUnPaciente"/>
        <covered by="Tests\Unit\EntityTest::testSettersYGetters"/>
        <covered by="Tests\Unit\EntityTest::testFuncionEquals"/>
        <covered by="PacienteControllerTest::testCrearNuevoPaciente"/>
        <covered by="PacienteControllerTest::testCrearNuevoPacienteConUnitOfWork"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidCuandoIdEsVacio"/>
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
        <covered by="Tests\Unit\PacienteTest::testHistorialYEntrevistasInicialmenteVacias"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarEntrevista"/>
      </line>
      <line nr="41">
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuidValido"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorLanzaExcepcionConUuidInvalido"/>
      </line>
      <line nr="42">
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuidValido"/>
      </line>
      <line nr="43">
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuidValido"/>
      </line>
      <line nr="49">
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaCrearYGuardarPaciente"/>
        <covered by="PacienteControllerTest::testCrearNuevoPaciente"/>
        <covered by="PacienteControllerTest::testCrearNuevoPacienteConUnitOfWork"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
      </line>
      <line nr="54">
        <covered by="Tests\Unit\AddPacienteHandlerTest::testInvokeDeberiaCrearYGuardarPaciente"/>
        <covered by="PacienteControllerTest::testCrearNuevoPaciente"/>
        <covered by="PacienteControllerTest::testCrearNuevoPacienteConUnitOfWork"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorGeneraUuidAutomaticamente"/>
        <covered by="Tests\Unit\PacienteTest::testConstructorAceptaUuid"/>
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
      </line>
      <line nr="59">
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
        <covered by="Tests\Unit\PacienteTest::testHistorialYEntrevistasInicialmenteVacias"/>
      </line>
      <line nr="64">
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
        <covered by="Tests\Unit\PacienteTest::testHistorialYEntrevistasInicialmenteVacias"/>
        <covered by="Tests\Unit\PacienteTest::testAgregarEntrevista"/>
      </line>
      <line nr="70">
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
      </line>
      <line nr="75">
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
      </line>
      <line nr="80">
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
      </line>
      <line nr="85">
        <covered by="Tests\Unit\PacienteTest::testSettersYGetters"/>
      </line>
      <line nr="90">
        <covered by="Tests\Unit\PacienteTest::testAgregarDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
      </line>
      <line nr="95">
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
      </line>
      <line nr="96">
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
      </line>
      <line nr="97">
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
      </line>
      <line nr="98">
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
      </line>
      <line nr="103">
        <covered by="Tests\Unit\PacienteTest::testAgregarEntrevista"/>
      </line>
      <line nr="108">
        <covered by="Tests\Unit\PacienteTest::testAgregarDiagnostico"/>
        <covered by="Tests\Unit\PacienteTest::testRemoverDiagnostico"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Mod2Nur\Dominio\Paciente</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DateTime</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Str</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Mod2Nur\Dominio\Abstracciones\AggregateRoot</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Mod2Nur\Dominio\Abstracciones\Entity</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Mod2Nur\Dominio\Diagnostico\Diagnostico</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Mod2Nur\Dominio\Entrevista\Entrevista</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Paciente</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AggregateRoot</token>
      </line>
      <line no="14">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DateTime</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fechaNacimiento</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$historial</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$entrevistas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">DateTime</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fechaNacimiento</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">		</token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fechaNacimiento</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">constructorUno</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fechaNacimiento</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">constructorDos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fechaNacimiento</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">			</token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidArgumentException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Par&#xE1;metros no v&#xE1;lidos"</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="30"/>
      <line no="31">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">constructorUno</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DateTime</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fechaNacimiento</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING_CAST">(string)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Str</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">uuid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">		</token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nombre</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">fechaNacimiento</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fechaNacimiento</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">constructorDos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DateTime</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fechaNacimiento</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">		</token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nombre</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">fechaNacimiento</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fechaNacimiento</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="45"/>
      <line no="46">
        <token name="T_WHITESPACE">	</token>
        <token name="T_COMMENT">// Getters</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getNombre</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nombre</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51"/>
      <line no="52">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getFechaNacimiento</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DateTime</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">fechaNacimiento</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getHistorial</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">historial</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61"/>
      <line no="62">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getEntrevistas</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entrevistas</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="66"/>
      <line no="67">
        <token name="T_WHITESPACE">	</token>
        <token name="T_COMMENT">// Setters</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setNombre</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nombre</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nombre</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="72"/>
      <line no="73">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setFechaNacimiento</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">DateTime</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fechaNacimiento</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">fechaNacimiento</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fechaNacimiento</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="77"/>
      <line no="78">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setHistorial</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$historial</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">historial</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$historial</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="82"/>
      <line no="83">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setEntrevistas</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$entrevistas</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entrevistas</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$entrevistas</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="87"/>
      <line no="88">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addDiagnostico</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Diagnostico</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$diagnostico</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">historial</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$diagnostico</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92"/>
      <line no="93">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">removeDiagnostico</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$diagnosticoId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">historial</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">			</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">historial</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">			</token>
        <token name="T_FN">fn</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$diagnosticoId</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">		</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="100"/>
      <line no="101">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addEntrevista</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Entrevista</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$entrevista</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">		</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">entrevistas</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$entrevista</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="105"/>
      <line no="106">
        <token name="T_WHITESPACE">	</token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getDiagnosticos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">	</token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">		</token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">historial</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">	</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="110">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="111"/>
    </source>
  </file>
</phpunit>
